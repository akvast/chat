// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from adapter_base.djinni

#include "JCBaseAdapter.hpp"  // my header
#include "JCAdapterListener.hpp"

namespace djinni_generated {

JCBaseAdapter::JCBaseAdapter() : ::djinni::JniInterface<::generated::CBaseAdapter, JCBaseAdapter>("com/github/akvast/securechat/CBaseAdapter$CppProxy") {}

JCBaseAdapter::~JCBaseAdapter() = default;


CJNIEXPORT void JNICALL Java_com_github_akvast_securechat_CBaseAdapter_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::generated::CBaseAdapter>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_akvast_securechat_CBaseAdapter_00024CppProxy_native_1setListener(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_listener)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CBaseAdapter>(nativeRef);
        ref->set_listener(::djinni_generated::JCAdapterListener::toCpp(jniEnv, j_listener));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_akvast_securechat_CBaseAdapter_00024CppProxy_native_1reload(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CBaseAdapter>(nativeRef);
        ref->reload();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
