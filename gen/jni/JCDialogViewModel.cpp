// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from vm_dialog.djinni

#include "JCDialogViewModel.hpp"  // my header
#include "JCViewModel.hpp"
#include "Marshal.hpp"

namespace djinni_generated {

JCDialogViewModel::JCDialogViewModel() : ::djinni::JniInterface<::generated::CDialogViewModel, JCDialogViewModel>("com/github/akvast/securechat/CDialogViewModel$CppProxy") {}

JCDialogViewModel::~JCDialogViewModel() = default;


CJNIEXPORT void JNICALL Java_com_github_akvast_securechat_CDialogViewModel_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::generated::CDialogViewModel>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_github_akvast_securechat_CDialogViewModel_00024CppProxy_native_1getBase(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CDialogViewModel>(nativeRef);
        auto r = ref->get_base();
        return ::djinni::release(::djinni_generated::JCViewModel::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_github_akvast_securechat_CDialogViewModel_00024CppProxy_native_1getAvatar(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CDialogViewModel>(nativeRef);
        auto r = ref->get_avatar();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_github_akvast_securechat_CDialogViewModel_00024CppProxy_native_1getTitle(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CDialogViewModel>(nativeRef);
        auto r = ref->get_title();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_github_akvast_securechat_CDialogViewModel_00024CppProxy_native_1getLastMessage(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CDialogViewModel>(nativeRef);
        auto r = ref->get_last_message();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jboolean JNICALL Java_com_github_akvast_securechat_CDialogViewModel_00024CppProxy_native_1isOnline(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CDialogViewModel>(nativeRef);
        auto r = ref->is_online();
        return ::djinni::release(::djinni::Bool::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
