// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from vm_base.djinni

#include "JCViewModelListener.hpp"  // my header

namespace djinni_generated {

JCViewModelListener::JCViewModelListener() : ::djinni::JniInterface<::generated::CViewModelListener, JCViewModelListener>("com/github/akvast/securechat/CViewModelListener$CppProxy") {}

JCViewModelListener::~JCViewModelListener() = default;

JCViewModelListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

JCViewModelListener::JavaProxy::~JavaProxy() = default;

void JCViewModelListener::JavaProxy::on_changed() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::JCViewModelListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onChanged);
    ::djinni::jniExceptionCheck(jniEnv);
}

CJNIEXPORT void JNICALL Java_com_github_akvast_securechat_CViewModelListener_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::generated::CViewModelListener>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_github_akvast_securechat_CViewModelListener_00024CppProxy_native_1onChanged(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::generated::CViewModelListener>(nativeRef);
        ref->on_changed();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
