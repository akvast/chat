// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: network.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "network.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PAuthMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PAuthMessage> {
} _PAuthMessage_default_instance_;
class PAuthSucceedMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PAuthSucceedMessage> {
} _PAuthSucceedMessage_default_instance_;
class PRegisterMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PRegisterMessage> {
} _PRegisterMessage_default_instance_;
class PErrorMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PErrorMessage> {
} _PErrorMessage_default_instance_;
class PContactsSearchRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PContactsSearchRequest> {
} _PContactsSearchRequest_default_instance_;
class PContactsSearchResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PContactsSearchResponse> {
} _PContactsSearchResponse_default_instance_;

namespace protobuf_network_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAuthMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAuthMessage, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAuthMessage, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAuthSucceedMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PAuthSucceedMessage, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegisterMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegisterMessage, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRegisterMessage, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PErrorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PErrorMessage, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PErrorMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PContactsSearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PContactsSearchRequest, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PContactsSearchRequest, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PContactsSearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PContactsSearchResponse, request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PContactsSearchResponse, users_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PAuthMessage)},
  { 6, -1, sizeof(PAuthSucceedMessage)},
  { 11, -1, sizeof(PRegisterMessage)},
  { 17, -1, sizeof(PErrorMessage)},
  { 23, -1, sizeof(PContactsSearchRequest)},
  { 29, -1, sizeof(PContactsSearchResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PAuthMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PAuthSucceedMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PRegisterMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PErrorMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PContactsSearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PContactsSearchResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "network.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _PAuthMessage_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PAuthSucceedMessage_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PRegisterMessage_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PErrorMessage_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PContactsSearchRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PContactsSearchResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::protobuf_network_5fstructs_2eproto::InitDefaults();
  _PAuthMessage_default_instance_.DefaultConstruct();
  _PAuthSucceedMessage_default_instance_.DefaultConstruct();
  _PRegisterMessage_default_instance_.DefaultConstruct();
  _PErrorMessage_default_instance_.DefaultConstruct();
  _PContactsSearchRequest_default_instance_.DefaultConstruct();
  _PContactsSearchResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rnetwork.proto\032\025network_structs.proto\"/"
      "\n\014PAuthMessage\022\r\n\005email\030\001 \001(\t\022\020\n\010passwor"
      "d\030\002 \001(\t\"#\n\023PAuthSucceedMessage\022\014\n\004name\030\001"
      " \001(\t\"3\n\020PRegisterMessage\022\r\n\005email\030\001 \001(\t\022"
      "\020\n\010password\030\002 \001(\t\".\n\rPErrorMessage\022\014\n\004co"
      "de\030\001 \001(\005\022\017\n\007message\030\002 \001(\t\";\n\026PContactsSe"
      "archRequest\022\022\n\nrequest_id\030\001 \001(\005\022\r\n\005query"
      "\030\002 \001(\t\"D\n\027PContactsSearchResponse\022\022\n\nreq"
      "uest_id\030\001 \001(\005\022\025\n\005users\030\002 \003(\0132\006.PUserb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 364);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "network.proto", &protobuf_RegisterTypes);
  ::protobuf_network_5fstructs_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_network_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PAuthMessage::kEmailFieldNumber;
const int PAuthMessage::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PAuthMessage::PAuthMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PAuthMessage)
}
PAuthMessage::PAuthMessage(const PAuthMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:PAuthMessage)
}

void PAuthMessage::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PAuthMessage::~PAuthMessage() {
  // @@protoc_insertion_point(destructor:PAuthMessage)
  SharedDtor();
}

void PAuthMessage::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PAuthMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PAuthMessage::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[0].descriptor;
}

const PAuthMessage& PAuthMessage::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

PAuthMessage* PAuthMessage::New(::google::protobuf::Arena* arena) const {
  PAuthMessage* n = new PAuthMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PAuthMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PAuthMessage)
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PAuthMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PAuthMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PAuthMessage.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PAuthMessage.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PAuthMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PAuthMessage)
  return false;
#undef DO_
}

void PAuthMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PAuthMessage)
  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PAuthMessage.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PAuthMessage.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:PAuthMessage)
}

::google::protobuf::uint8* PAuthMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PAuthMessage)
  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PAuthMessage.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PAuthMessage.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PAuthMessage)
  return target;
}

size_t PAuthMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PAuthMessage)
  size_t total_size = 0;

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PAuthMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PAuthMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PAuthMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PAuthMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PAuthMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PAuthMessage)
    MergeFrom(*source);
  }
}

void PAuthMessage::MergeFrom(const PAuthMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PAuthMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PAuthMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PAuthMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PAuthMessage::CopyFrom(const PAuthMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PAuthMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PAuthMessage::IsInitialized() const {
  return true;
}

void PAuthMessage::Swap(PAuthMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PAuthMessage::InternalSwap(PAuthMessage* other) {
  email_.Swap(&other->email_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PAuthMessage::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PAuthMessage

// string email = 1;
void PAuthMessage::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PAuthMessage::email() const {
  // @@protoc_insertion_point(field_get:PAuthMessage.email)
  return email_.GetNoArena();
}
void PAuthMessage::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PAuthMessage.email)
}
#if LANG_CXX11
void PAuthMessage::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PAuthMessage.email)
}
#endif
void PAuthMessage::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PAuthMessage.email)
}
void PAuthMessage::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PAuthMessage.email)
}
::std::string* PAuthMessage::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:PAuthMessage.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PAuthMessage::release_email() {
  // @@protoc_insertion_point(field_release:PAuthMessage.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PAuthMessage::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:PAuthMessage.email)
}

// string password = 2;
void PAuthMessage::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PAuthMessage::password() const {
  // @@protoc_insertion_point(field_get:PAuthMessage.password)
  return password_.GetNoArena();
}
void PAuthMessage::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PAuthMessage.password)
}
#if LANG_CXX11
void PAuthMessage::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PAuthMessage.password)
}
#endif
void PAuthMessage::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PAuthMessage.password)
}
void PAuthMessage::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PAuthMessage.password)
}
::std::string* PAuthMessage::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:PAuthMessage.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PAuthMessage::release_password() {
  // @@protoc_insertion_point(field_release:PAuthMessage.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PAuthMessage::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PAuthMessage.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PAuthSucceedMessage::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PAuthSucceedMessage::PAuthSucceedMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PAuthSucceedMessage)
}
PAuthSucceedMessage::PAuthSucceedMessage(const PAuthSucceedMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:PAuthSucceedMessage)
}

void PAuthSucceedMessage::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PAuthSucceedMessage::~PAuthSucceedMessage() {
  // @@protoc_insertion_point(destructor:PAuthSucceedMessage)
  SharedDtor();
}

void PAuthSucceedMessage::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PAuthSucceedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PAuthSucceedMessage::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[1].descriptor;
}

const PAuthSucceedMessage& PAuthSucceedMessage::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

PAuthSucceedMessage* PAuthSucceedMessage::New(::google::protobuf::Arena* arena) const {
  PAuthSucceedMessage* n = new PAuthSucceedMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PAuthSucceedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PAuthSucceedMessage)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PAuthSucceedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PAuthSucceedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PAuthSucceedMessage.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PAuthSucceedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PAuthSucceedMessage)
  return false;
#undef DO_
}

void PAuthSucceedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PAuthSucceedMessage)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PAuthSucceedMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:PAuthSucceedMessage)
}

::google::protobuf::uint8* PAuthSucceedMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PAuthSucceedMessage)
  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PAuthSucceedMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PAuthSucceedMessage)
  return target;
}

size_t PAuthSucceedMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PAuthSucceedMessage)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PAuthSucceedMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PAuthSucceedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PAuthSucceedMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PAuthSucceedMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PAuthSucceedMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PAuthSucceedMessage)
    MergeFrom(*source);
  }
}

void PAuthSucceedMessage::MergeFrom(const PAuthSucceedMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PAuthSucceedMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PAuthSucceedMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PAuthSucceedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PAuthSucceedMessage::CopyFrom(const PAuthSucceedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PAuthSucceedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PAuthSucceedMessage::IsInitialized() const {
  return true;
}

void PAuthSucceedMessage::Swap(PAuthSucceedMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PAuthSucceedMessage::InternalSwap(PAuthSucceedMessage* other) {
  name_.Swap(&other->name_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PAuthSucceedMessage::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PAuthSucceedMessage

// string name = 1;
void PAuthSucceedMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PAuthSucceedMessage::name() const {
  // @@protoc_insertion_point(field_get:PAuthSucceedMessage.name)
  return name_.GetNoArena();
}
void PAuthSucceedMessage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PAuthSucceedMessage.name)
}
#if LANG_CXX11
void PAuthSucceedMessage::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PAuthSucceedMessage.name)
}
#endif
void PAuthSucceedMessage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PAuthSucceedMessage.name)
}
void PAuthSucceedMessage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PAuthSucceedMessage.name)
}
::std::string* PAuthSucceedMessage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PAuthSucceedMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PAuthSucceedMessage::release_name() {
  // @@protoc_insertion_point(field_release:PAuthSucceedMessage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PAuthSucceedMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PAuthSucceedMessage.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRegisterMessage::kEmailFieldNumber;
const int PRegisterMessage::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRegisterMessage::PRegisterMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PRegisterMessage)
}
PRegisterMessage::PRegisterMessage(const PRegisterMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:PRegisterMessage)
}

void PRegisterMessage::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PRegisterMessage::~PRegisterMessage() {
  // @@protoc_insertion_point(destructor:PRegisterMessage)
  SharedDtor();
}

void PRegisterMessage::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRegisterMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRegisterMessage::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[2].descriptor;
}

const PRegisterMessage& PRegisterMessage::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

PRegisterMessage* PRegisterMessage::New(::google::protobuf::Arena* arena) const {
  PRegisterMessage* n = new PRegisterMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRegisterMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PRegisterMessage)
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PRegisterMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PRegisterMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PRegisterMessage.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PRegisterMessage.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PRegisterMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PRegisterMessage)
  return false;
#undef DO_
}

void PRegisterMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PRegisterMessage)
  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterMessage.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterMessage.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:PRegisterMessage)
}

::google::protobuf::uint8* PRegisterMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PRegisterMessage)
  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterMessage.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRegisterMessage.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PRegisterMessage)
  return target;
}

size_t PRegisterMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRegisterMessage)
  size_t total_size = 0;

  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRegisterMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PRegisterMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PRegisterMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRegisterMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PRegisterMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PRegisterMessage)
    MergeFrom(*source);
  }
}

void PRegisterMessage::MergeFrom(const PRegisterMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRegisterMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PRegisterMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PRegisterMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRegisterMessage::CopyFrom(const PRegisterMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRegisterMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRegisterMessage::IsInitialized() const {
  return true;
}

void PRegisterMessage::Swap(PRegisterMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRegisterMessage::InternalSwap(PRegisterMessage* other) {
  email_.Swap(&other->email_);
  password_.Swap(&other->password_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRegisterMessage::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRegisterMessage

// string email = 1;
void PRegisterMessage::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PRegisterMessage::email() const {
  // @@protoc_insertion_point(field_get:PRegisterMessage.email)
  return email_.GetNoArena();
}
void PRegisterMessage::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PRegisterMessage.email)
}
#if LANG_CXX11
void PRegisterMessage::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PRegisterMessage.email)
}
#endif
void PRegisterMessage::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PRegisterMessage.email)
}
void PRegisterMessage::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PRegisterMessage.email)
}
::std::string* PRegisterMessage::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:PRegisterMessage.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PRegisterMessage::release_email() {
  // @@protoc_insertion_point(field_release:PRegisterMessage.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PRegisterMessage::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:PRegisterMessage.email)
}

// string password = 2;
void PRegisterMessage::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PRegisterMessage::password() const {
  // @@protoc_insertion_point(field_get:PRegisterMessage.password)
  return password_.GetNoArena();
}
void PRegisterMessage::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PRegisterMessage.password)
}
#if LANG_CXX11
void PRegisterMessage::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PRegisterMessage.password)
}
#endif
void PRegisterMessage::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PRegisterMessage.password)
}
void PRegisterMessage::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PRegisterMessage.password)
}
::std::string* PRegisterMessage::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:PRegisterMessage.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PRegisterMessage::release_password() {
  // @@protoc_insertion_point(field_release:PRegisterMessage.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PRegisterMessage::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PRegisterMessage.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PErrorMessage::kCodeFieldNumber;
const int PErrorMessage::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PErrorMessage::PErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PErrorMessage)
}
PErrorMessage::PErrorMessage(const PErrorMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:PErrorMessage)
}

void PErrorMessage::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _cached_size_ = 0;
}

PErrorMessage::~PErrorMessage() {
  // @@protoc_insertion_point(destructor:PErrorMessage)
  SharedDtor();
}

void PErrorMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PErrorMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PErrorMessage::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[3].descriptor;
}

const PErrorMessage& PErrorMessage::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

PErrorMessage* PErrorMessage::New(::google::protobuf::Arena* arena) const {
  PErrorMessage* n = new PErrorMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:PErrorMessage)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

bool PErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PErrorMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PErrorMessage.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PErrorMessage)
  return false;
#undef DO_
}

void PErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PErrorMessage)
  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PErrorMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:PErrorMessage)
}

::google::protobuf::uint8* PErrorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PErrorMessage)
  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PErrorMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PErrorMessage)
  return target;
}

size_t PErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PErrorMessage)
  size_t total_size = 0;

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PErrorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PErrorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PErrorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PErrorMessage)
    MergeFrom(*source);
  }
}

void PErrorMessage::MergeFrom(const PErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PErrorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void PErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PErrorMessage::CopyFrom(const PErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PErrorMessage::IsInitialized() const {
  return true;
}

void PErrorMessage::Swap(PErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PErrorMessage::InternalSwap(PErrorMessage* other) {
  message_.Swap(&other->message_);
  std::swap(code_, other->code_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PErrorMessage::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PErrorMessage

// int32 code = 1;
void PErrorMessage::clear_code() {
  code_ = 0;
}
::google::protobuf::int32 PErrorMessage::code() const {
  // @@protoc_insertion_point(field_get:PErrorMessage.code)
  return code_;
}
void PErrorMessage::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:PErrorMessage.code)
}

// string message = 2;
void PErrorMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PErrorMessage::message() const {
  // @@protoc_insertion_point(field_get:PErrorMessage.message)
  return message_.GetNoArena();
}
void PErrorMessage::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PErrorMessage.message)
}
#if LANG_CXX11
void PErrorMessage::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PErrorMessage.message)
}
#endif
void PErrorMessage::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PErrorMessage.message)
}
void PErrorMessage::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PErrorMessage.message)
}
::std::string* PErrorMessage::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:PErrorMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PErrorMessage::release_message() {
  // @@protoc_insertion_point(field_release:PErrorMessage.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PErrorMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:PErrorMessage.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PContactsSearchRequest::kRequestIdFieldNumber;
const int PContactsSearchRequest::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PContactsSearchRequest::PContactsSearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PContactsSearchRequest)
}
PContactsSearchRequest::PContactsSearchRequest(const PContactsSearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.query().size() > 0) {
    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:PContactsSearchRequest)
}

void PContactsSearchRequest::SharedCtor() {
  query_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_ = 0;
  _cached_size_ = 0;
}

PContactsSearchRequest::~PContactsSearchRequest() {
  // @@protoc_insertion_point(destructor:PContactsSearchRequest)
  SharedDtor();
}

void PContactsSearchRequest::SharedDtor() {
  query_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PContactsSearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PContactsSearchRequest::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[4].descriptor;
}

const PContactsSearchRequest& PContactsSearchRequest::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

PContactsSearchRequest* PContactsSearchRequest::New(::google::protobuf::Arena* arena) const {
  PContactsSearchRequest* n = new PContactsSearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PContactsSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PContactsSearchRequest)
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_id_ = 0;
}

bool PContactsSearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PContactsSearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 request_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string query = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_query()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->query().data(), this->query().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PContactsSearchRequest.query"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PContactsSearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PContactsSearchRequest)
  return false;
#undef DO_
}

void PContactsSearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PContactsSearchRequest)
  // int32 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->request_id(), output);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PContactsSearchRequest.query");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->query(), output);
  }

  // @@protoc_insertion_point(serialize_end:PContactsSearchRequest)
}

::google::protobuf::uint8* PContactsSearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PContactsSearchRequest)
  // int32 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->request_id(), target);
  }

  // string query = 2;
  if (this->query().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->query().data(), this->query().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PContactsSearchRequest.query");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->query(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PContactsSearchRequest)
  return target;
}

size_t PContactsSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PContactsSearchRequest)
  size_t total_size = 0;

  // string query = 2;
  if (this->query().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->query());
  }

  // int32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PContactsSearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PContactsSearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PContactsSearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PContactsSearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PContactsSearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PContactsSearchRequest)
    MergeFrom(*source);
  }
}

void PContactsSearchRequest::MergeFrom(const PContactsSearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PContactsSearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.query().size() > 0) {

    query_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.query_);
  }
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
}

void PContactsSearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PContactsSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PContactsSearchRequest::CopyFrom(const PContactsSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PContactsSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PContactsSearchRequest::IsInitialized() const {
  return true;
}

void PContactsSearchRequest::Swap(PContactsSearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PContactsSearchRequest::InternalSwap(PContactsSearchRequest* other) {
  query_.Swap(&other->query_);
  std::swap(request_id_, other->request_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PContactsSearchRequest::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PContactsSearchRequest

// int32 request_id = 1;
void PContactsSearchRequest::clear_request_id() {
  request_id_ = 0;
}
::google::protobuf::int32 PContactsSearchRequest::request_id() const {
  // @@protoc_insertion_point(field_get:PContactsSearchRequest.request_id)
  return request_id_;
}
void PContactsSearchRequest::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:PContactsSearchRequest.request_id)
}

// string query = 2;
void PContactsSearchRequest::clear_query() {
  query_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PContactsSearchRequest::query() const {
  // @@protoc_insertion_point(field_get:PContactsSearchRequest.query)
  return query_.GetNoArena();
}
void PContactsSearchRequest::set_query(const ::std::string& value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PContactsSearchRequest.query)
}
#if LANG_CXX11
void PContactsSearchRequest::set_query(::std::string&& value) {
  
  query_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PContactsSearchRequest.query)
}
#endif
void PContactsSearchRequest::set_query(const char* value) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PContactsSearchRequest.query)
}
void PContactsSearchRequest::set_query(const char* value, size_t size) {
  
  query_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PContactsSearchRequest.query)
}
::std::string* PContactsSearchRequest::mutable_query() {
  
  // @@protoc_insertion_point(field_mutable:PContactsSearchRequest.query)
  return query_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PContactsSearchRequest::release_query() {
  // @@protoc_insertion_point(field_release:PContactsSearchRequest.query)
  
  return query_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PContactsSearchRequest::set_allocated_query(::std::string* query) {
  if (query != NULL) {
    
  } else {
    
  }
  query_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), query);
  // @@protoc_insertion_point(field_set_allocated:PContactsSearchRequest.query)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PContactsSearchResponse::kRequestIdFieldNumber;
const int PContactsSearchResponse::kUsersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PContactsSearchResponse::PContactsSearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_network_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PContactsSearchResponse)
}
PContactsSearchResponse::PContactsSearchResponse(const PContactsSearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      users_(from.users_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  request_id_ = from.request_id_;
  // @@protoc_insertion_point(copy_constructor:PContactsSearchResponse)
}

void PContactsSearchResponse::SharedCtor() {
  request_id_ = 0;
  _cached_size_ = 0;
}

PContactsSearchResponse::~PContactsSearchResponse() {
  // @@protoc_insertion_point(destructor:PContactsSearchResponse)
  SharedDtor();
}

void PContactsSearchResponse::SharedDtor() {
}

void PContactsSearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PContactsSearchResponse::descriptor() {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[5].descriptor;
}

const PContactsSearchResponse& PContactsSearchResponse::default_instance() {
  protobuf_network_2eproto::InitDefaults();
  return *internal_default_instance();
}

PContactsSearchResponse* PContactsSearchResponse::New(::google::protobuf::Arena* arena) const {
  PContactsSearchResponse* n = new PContactsSearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PContactsSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:PContactsSearchResponse)
  users_.Clear();
  request_id_ = 0;
}

bool PContactsSearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PContactsSearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 request_id = 1;
      case 1: {
        if (tag == 8u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PUser users = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_users()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PContactsSearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PContactsSearchResponse)
  return false;
#undef DO_
}

void PContactsSearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PContactsSearchResponse)
  // int32 request_id = 1;
  if (this->request_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->request_id(), output);
  }

  // repeated .PUser users = 2;
  for (unsigned int i = 0, n = this->users_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->users(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PContactsSearchResponse)
}

::google::protobuf::uint8* PContactsSearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PContactsSearchResponse)
  // int32 request_id = 1;
  if (this->request_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->request_id(), target);
  }

  // repeated .PUser users = 2;
  for (unsigned int i = 0, n = this->users_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->users(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PContactsSearchResponse)
  return target;
}

size_t PContactsSearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PContactsSearchResponse)
  size_t total_size = 0;

  // repeated .PUser users = 2;
  {
    unsigned int count = this->users_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->users(i));
    }
  }

  // int32 request_id = 1;
  if (this->request_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->request_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PContactsSearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PContactsSearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PContactsSearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PContactsSearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PContactsSearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PContactsSearchResponse)
    MergeFrom(*source);
  }
}

void PContactsSearchResponse::MergeFrom(const PContactsSearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PContactsSearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  users_.MergeFrom(from.users_);
  if (from.request_id() != 0) {
    set_request_id(from.request_id());
  }
}

void PContactsSearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PContactsSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PContactsSearchResponse::CopyFrom(const PContactsSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PContactsSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PContactsSearchResponse::IsInitialized() const {
  return true;
}

void PContactsSearchResponse::Swap(PContactsSearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PContactsSearchResponse::InternalSwap(PContactsSearchResponse* other) {
  users_.UnsafeArenaSwap(&other->users_);
  std::swap(request_id_, other->request_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PContactsSearchResponse::GetMetadata() const {
  protobuf_network_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_network_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PContactsSearchResponse

// int32 request_id = 1;
void PContactsSearchResponse::clear_request_id() {
  request_id_ = 0;
}
::google::protobuf::int32 PContactsSearchResponse::request_id() const {
  // @@protoc_insertion_point(field_get:PContactsSearchResponse.request_id)
  return request_id_;
}
void PContactsSearchResponse::set_request_id(::google::protobuf::int32 value) {
  
  request_id_ = value;
  // @@protoc_insertion_point(field_set:PContactsSearchResponse.request_id)
}

// repeated .PUser users = 2;
int PContactsSearchResponse::users_size() const {
  return users_.size();
}
void PContactsSearchResponse::clear_users() {
  users_.Clear();
}
const ::PUser& PContactsSearchResponse::users(int index) const {
  // @@protoc_insertion_point(field_get:PContactsSearchResponse.users)
  return users_.Get(index);
}
::PUser* PContactsSearchResponse::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:PContactsSearchResponse.users)
  return users_.Mutable(index);
}
::PUser* PContactsSearchResponse::add_users() {
  // @@protoc_insertion_point(field_add:PContactsSearchResponse.users)
  return users_.Add();
}
::google::protobuf::RepeatedPtrField< ::PUser >*
PContactsSearchResponse::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:PContactsSearchResponse.users)
  return &users_;
}
const ::google::protobuf::RepeatedPtrField< ::PUser >&
PContactsSearchResponse::users() const {
  // @@protoc_insertion_point(field_list:PContactsSearchResponse.users)
  return users_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
